{"version":3,"file":"index.min.js","sources":["../src/DataManager.js","../src/Entity.js","../src/Serialize.js","../src/Query.js","../src/Component.js","../src/World.js","../src/System.js","../src/index.js"],"sourcesContent":["export const TYPES_ENUM = {\n  bool: 'bool',\n  i8: 'i8',\n  ui8: 'ui8',\n  ui8c: 'ui8c',\n  i16: 'i16',\n  ui16: 'ui16',\n  i32: 'i32',\n  ui32: 'ui32',\n  f32: 'f32',\n  f64: 'f64'\n}\n\nexport const TYPES = {\n  bool: 'bool',\n  i8: Int8Array,\n  ui8: Uint8Array,\n  ui8c: Uint8ClampedArray,\n  i16: Int16Array,\n  ui16: Uint16Array,\n  i32: Int32Array,\n  ui32: Uint32Array,\n  f32: Float32Array,\n  f64: Float64Array\n}\n\nconst UNSIGNED_MAX = {\n  uint8: 255,\n  uint16: 65535,\n  uint32: 4294967295\n}\n\nconst grow = (ta, amount) => {\n  const newTa = new ta.constructor(new ArrayBuffer(ta.buffer.byteLength + (amount * ta.BYTES_PER_ELEMENT)))\n  newTa.set(ta.buffer)\n  return newTa\n}\n\nconst roundToMultiple4 = x => Math.ceil(x / 4) * 4\n\nconst managers = {}\n\nexport const $managerRef = Symbol('managerRef')\nexport const $managerSize = Symbol('managerSize')\nexport const $managerMaps = Symbol('maps')\nexport const $managerSubarrays = Symbol('subarrays')\nexport const $managerCursor = Symbol('managerCursor')\nexport const $managerRemoved = Symbol('managerRemoved')\n\nexport const $queryShadow = Symbol('queryShadow')\nexport const $serializeShadow = Symbol('$serializeShadow')\n\nexport const alloc = (schema, size=1000000) => {\n  const $manager = Symbol('manager')\n\n  if (schema.constructor.name === 'Map') {\n    schema[$managerSize] = size;\n    return schema;\n  }\n  \n  managers[$manager] = {\n    [$managerSize]: size,\n    [$managerMaps]: {},\n    [$managerSubarrays]: {},\n    [$managerRef]: $manager,\n    [$managerCursor]: 0,\n    [$managerRemoved]: []\n  }\n\n  const props = schema ? Object.keys(schema) : []\n\n  let arrays = props.filter(p => Array.isArray(schema[p]) && typeof schema[p][0] === 'object')\n  const cursors = Object.keys(TYPES).reduce((a, type) => ({ ...a, [type]: 0 }), {})\n\n  if (typeof schema === 'string') {\n\n    const type = schema\n    const totalBytes = size * TYPES[type].BYTES_PER_ELEMENT\n    const buffer = new ArrayBuffer(totalBytes)\n    managers[$manager] = new TYPES[type](buffer)\n\n  } else if (Array.isArray(schema)) {\n    arrays = schema\n\n    const { type, length } = schema[0]\n\n    const indexType =\n      length < UNSIGNED_MAX.uint8\n        ? 'ui8'\n        : length < UNSIGNED_MAX.uint16\n          ? 'ui16'\n          : 'ui32'\n\n    if (!length) throw new Error('❌ Must define a length for component array.')\n    if (!TYPES[type]) throw new Error(`❌ Invalid component array property type ${type}.`)\n\n    // create buffer for type if it does not already exist\n    if (!managers[$manager][$managerSubarrays][type]) {\n      const relevantArrays = arrays\n      const summedBytesPerElement = relevantArrays.reduce((a, p) => a + TYPES[type].BYTES_PER_ELEMENT, 0)\n      const summedLength = relevantArrays.reduce((a, p) => a + length, 0)\n      const buffer = new ArrayBuffer(roundToMultiple4(summedBytesPerElement * summedLength * size))\n      const array = new TYPES[type](buffer)\n      array._indexType = indexType\n      array._indexBytes = TYPES[indexType].BYTES_PER_ELEMENT\n      managers[$manager][$managerSubarrays][type] = array\n    }\n\n    // pre-generate subarrays for each eid\n    let end = 0\n    for (let eid = 0; eid < size; eid++) {\n      const from = cursors[type] + (eid * length)\n      const to = from + length\n      managers[$manager][eid] = managers[$manager][$managerSubarrays][type].subarray(from, to)\n      end = to\n    }\n\n    cursors[type] = end\n\n    managers[$manager]._reset = eid => managers[$manager][eid].fill(0)\n    managers[$manager]._set = (eid, values) => managers[$manager][eid].set(values, 0)\n\n\n  } else props.forEach(prop => {\n    // Boolean Type\n    if (schema[prop] === 'bool') {\n      const Type = TYPES.uint8\n      const totalBytes = size * TYPES.uint8.BYTES_PER_ELEMENT\n      const buffer = new ArrayBuffer(totalBytes)\n      managers[$manager][$managerMaps][prop] = schema[prop]\n      managers[$manager][prop] = new Type(buffer)\n      managers[$manager][prop]._boolType = true\n\n      // Enum Type\n    } else if (Array.isArray(schema[prop]) && typeof schema[prop][0] === 'string') {\n      const Type = TYPES.uint8\n      const totalBytes = size * TYPES.uint8.BYTES_PER_ELEMENT\n      const buffer = new ArrayBuffer(totalBytes)\n      managers[$manager][$managerMaps][prop] = schema[prop]\n      managers[$manager][prop] = new Type(buffer)\n\n      // Array Type\n    } else if (Array.isArray(schema[prop]) && typeof schema[prop][0] === 'object') {\n      const { type, length } = schema[0]\n\n      const indexType =\n        length < UNSIGNED_MAX.uint8\n          ? UNSIGNED_MAX.uint8\n          : length < UNSIGNED_MAX.uint16\n            ? UNSIGNED_MAX.uint16\n            : UNSIGNED_MAX.uint32\n\n      if (!length) throw new Error('❌ Must define a length for component array.')\n      if (!TYPES[type]) throw new Error(`❌ Invalid component array property type ${type}.`)\n\n      // create buffer for type if it does not already exist\n      if (!managers[$manager][$managerSubarrays][type]) {\n        const relevantArrays = arrays.filter(p => schema[p][0].type === type)\n        const summedBytesPerElement = relevantArrays.reduce((a, p) => a + TYPES[type].BYTES_PER_ELEMENT, 0)\n        const summedLength = relevantArrays.reduce((a, p) => a + length, 0)\n        const buffer = new ArrayBuffer(roundToMultiple4(summedBytesPerElement * summedLength * size))\n        const array = new TYPES[type](buffer)\n        array._indexType = index\n        array._indexBytes = TYPES[index].BYTES_PER_ELEMENT\n        managers[$manager][$managerSubarrays][type] = array\n      }\n\n      // pre-generate subarrays for each eid\n      managers[$manager][prop] = {}\n      let end = 0\n      for (let eid = 0; eid < size; eid++) {\n        const from = cursors[type] + (eid * length)\n        const to = from + length\n        managers[$manager][prop][eid] = managers[$manager][$managerSubarrays][type].subarray(from, to)\n        end = to\n      }\n\n      cursors[type] = end\n\n      managers[$manager][prop]._reset = eid => managers[$manager][prop][eid].fill(0)\n      managers[$manager][prop]._set = (eid, values) => managers[$manager][prop][eid].set(values, 0)\n\n      // Object Type\n    } else if (typeof schema[prop] === 'object') {\n      managers[$manager][prop] = Manager(size, schema[prop], false)\n\n      // String Type\n    } else if (typeof schema[prop] === 'string') {\n      const type = schema[prop]\n      const totalBytes = size * TYPES[type].BYTES_PER_ELEMENT\n      const buffer = new ArrayBuffer(totalBytes)\n      const queryShadowBuffer = new ArrayBuffer(totalBytes)\n      const serializeShadowBuffer = new ArrayBuffer(totalBytes)\n      managers[$manager][prop] = new TYPES[type](buffer)\n      managers[$manager][prop][$queryShadow] = new TYPES[type](queryShadowBuffer)\n      managers[$manager][prop][$serializeShadow] = new TYPES[type](serializeShadowBuffer)\n\n      // TypedArray Type\n    } else if (typeof schema[prop] === 'function') {\n      const Type = schema[prop]\n      const totalBytes = size * Type.BYTES_PER_ELEMENT\n      const buffer = new ArrayBuffer(totalBytes)\n      managers[$manager][prop] = new Type(buffer)\n    } else {\n      throw new Error(`ECS Error: invalid property type ${schema[prop]}`)\n    }\n  })\n\n  // methods\n  Object.defineProperty(managers[$manager], '_schema', {\n    value: schema\n  })\n\n  Object.defineProperty(managers[$manager], '_mapping', {\n    value: prop => managers[$manager][$managerMaps][prop]\n  })\n\n  // Recursively set all values to 0\n  Object.defineProperty(managers[$manager], '_reset', {\n    value: eid => {\n      for (const prop of managers[$manager]._props) {\n        if (ArrayBuffer.isView(managers[$manager][prop])) {\n          if (ArrayBuffer.isView(managers[$manager][prop][eid])) {\n            managers[$manager][prop][eid].fill(0)\n          } else {\n            managers[$manager][prop][eid] = 0\n          }\n        } else {\n          managers[$manager][prop]._reset(eid)\n        }\n      }\n    }\n  })\n\n  // Recursively set all values from a supplied object\n  Object.defineProperty(managers[$manager], '_set', {\n    value: (eid, values) => {\n      for (const prop in values) {\n        const mapping = managers[$manager]._mapping(prop)\n        if (mapping && typeof values[prop] === 'string') {\n          managers[$manager].enum(prop, eid, values[prop])\n        } else if (ArrayBuffer.isView(managers[$manager][prop])) {\n          managers[$manager][prop][eid] = values[prop]\n        } else if (Array.isArray(values[prop]) && ArrayBuffer.isView(managers[$manager][prop][eid])) {\n          managers[$manager][prop][eid].set(values[prop], 0)\n        } else if (typeof managers[$manager][prop] === 'object') {\n          managers[$manager][prop]._set(eid, values[prop])\n        }\n      }\n    }\n  })\n\n  Object.defineProperty(managers[$manager], '_get', {\n    value: (eid) => {\n      const obj = {}\n      for (const prop of managers[$manager]._props) {\n        const mapping = managers[$manager]._mapping(prop)\n        if (mapping) {\n          obj[prop] = managers[$manager].enum(prop, eid)\n        } else if (ArrayBuffer.isView(managers[$manager][prop])) {\n          obj[prop] = managers[$manager][prop][eid]\n        } else if (typeof managers[$manager][prop] === 'object') {\n          if (ArrayBuffer.isView(managers[$manager][prop][eid])) {\n            obj[prop] = Array.from(managers[$manager][prop][eid])\n          } else {\n            obj[prop] = managers[$manager][prop]._get(eid)\n          }\n        }\n      }\n      return obj\n    }\n  })\n\n  Object.defineProperty(managers[$manager], '_props', {\n    value: props\n  })\n\n  // Aggregate all typedArrays into single kvp array (memoized)\n  let flattened\n  Object.defineProperty(managers[$manager], '_flatten', {\n    value: (flat = []) => {\n      if (flattened) return flattened\n      for (const prop of managers[$manager]._props) {\n        if (ArrayBuffer.isView(managers[$manager][prop])) {\n          flat.push(managers[$manager][prop])\n        } else if (typeof managers[$manager][prop] === 'object') {\n          managers[$manager][prop]._flatten(flat)\n        }\n      }\n      flattened = flat\n      return flat\n    }\n  })\n\n  Object.defineProperty(managers[$manager], 'enum', {\n    value: (prop, eid, value) => {\n      const mapping = managers[$manager]._mapping(prop)\n      if (!mapping) {\n        console.warn('Property is not an enum.')\n        return undefined\n      }\n      if (value) {\n        const index = mapping.indexOf(value)\n        if (index === -1) {\n          console.warn(`Value '${value}' is not part of enum.`)\n          return undefined\n        }\n        managers[$manager][prop][eid] = index\n      } else {\n        return mapping[managers[$manager][prop][eid]]\n      }\n    }\n  })\n\n  Object.defineProperty(managers[$manager], '_grow', {\n    value: (amount) => {\n      managers[$manager][$managerSize] += amount \n      for (const prop of managers[$manager]._props) {\n        if (ArrayBuffer.isView(managers[$manager][prop])) {\n          managers[$manager][prop] = grow(managers[$manager][prop], amount)\n          managers[$manager][prop][$queryShadow] = grow(managers[$manager][prop], amount)\n        } else if (typeof managers[$manager][prop] === 'object') {\n          if (ArrayBuffer.isView(managers[$manager][prop][eid])) {\n            // grow subarrays\n            // managers[$manager][prop] = Array.from(managers[$manager][prop][eid])\n          } else {\n            managers[$manager][prop]._grow()\n          }\n        }\n      }\n    }\n  })\n\n  return managers[$manager]\n}\n\nexport const free = (manager) => {\n  delete managers[manager[$managerRef]]\n}","import { $componentMap } from './Component.js'\nimport { $queries, queryRemoveEntity } from './Query.js'\nimport { $size } from './World.js'\n\nexport const $entityMasks = Symbol('entityMasks')\nexport const $entityEnabled = Symbol('entityEnabled')\nexport const $deferredEntityRemovals = Symbol('deferredEntityRemovals')\nexport const $removedEntities = Symbol('removedEntities')\n\n// need a global EID cursor which all worlds and all components know about\n// so that world entities can posess entire rows spanning all component tables\nlet globalEntityCursor = 0\n\nexport const getEntityCursor = () => globalEntityCursor\n\nexport const incrementEntityCursor = () => globalEntityCursor++\n\nexport const addEntity = (world) => {\n  const removed = world[$removedEntities]\n  const size = world[$size]\n  const enabled = world[$entityEnabled]\n\n  if (globalEntityCursor >= size - size / 5) { // if 80% full\n\n    const amount = Math.ceil((size/2) / 4) * 4 // grow by half the original size rounded up to a multiple of 4\n\n    // grow data stores\n    world[$componentMap].forEach(component => {\n      component.manager._grow(amount)\n    })\n    world[$size] += amount\n\n    // TODO: grow metadata on world mappings for world's internal queries/components\n  }\n\n  const eid = removed.length > 0 ? removed.pop() : globalEntityCursor\n  enabled[eid] = 1\n  globalEntityCursor++\n  return eid\n}\n\nexport const removeEntity = (world, eid) => world[$deferredEntityRemovals].push(eid)\n\nexport const commitEntityRemovals = (world) => {\n  const deferred = world[$deferredEntityRemovals]\n  const queries = world[$queries]\n  const removed = world[$removedEntities]\n  const enabled = world[$entityEnabled]\n\n  for (let i = 0; i < deferred.length; i++) {\n    const eid = deferred[i]\n    // Check if entity is already removed\n    if (enabled[eid] === 0) continue\n\n    // Remove entity from all queries\n    // TODO: archetype graph\n    queries.forEach(query => {\n      queryRemoveEntity(world, query, eid)\n    })\n\n    // Free the entity\n    removed.push(eid)\n    enabled[eid] = 0\n\n    // Clear component bitmasks\n    for (let i = 0; i < world[$entityMasks].length; i++) world[$entityMasks][i][eid] = 0\n    \n  }\n\n  deferred.length = 0\n}\n","import { $queryMap } from \"./Query.js\"\nimport { $queryShadow, $serializeShadow } from \"./DataManager.js\"\nimport { $componentMap } from \"./Component.js\"\n\nexport const diff = (world, query) => {\n  const q = world[$queryMap].get(query)\n  q.changed.length = 0\n  const flat = q.flatProps\n  for (let i = 0; i < q.entities.length; i++) {\n    const eid = q.entities[i]\n    let dirty = false\n    for (let pid = 0; pid < flat.length; pid++) {\n      const prop = flat[pid]\n      if (ArrayBuffer.isView(prop[eid])) {\n        for (let i = 0; i < prop[eid].length; i++) {\n          if (prop[eid][i] !== prop[eid][$queryShadow][i]) {\n            dirty = true\n            prop[eid][$queryShadow][i] = prop[eid][i]\n          }\n        }\n      } else {\n        if (prop[eid] !== prop[$queryShadow][eid]) {\n          dirty = true\n          prop[$queryShadow][eid] = prop[eid]\n        }\n      }\n    }\n    if (dirty) q.changed.push(eid)\n  }\n  return q.changed\n}\n\nconst canonicalize = (target) => {\n  let componentProps\n  let changedProps = new Set()\n  if (Array.isArray(target)) {\n    componentProps = target\n      .map(p => {\n        if (p._flatten) {\n          return p._flatten()\n        } else if (typeof p === 'function' && p.name === 'QueryChanged') {\n          p = p()\n          if (p._flatten) {\n            let props = p._flatten()\n            props.forEach(x => changedProps.add(x))\n            return props\n          }\n          changedProps.add(p)\n          return [p]\n        }\n      })\n      .reduce((a,v) => a.concat(v), [])\n  } else {\n    target[$componentMap].forEach(c => {\n      componentProps = componentProps.concat(c._flatten())\n    })\n  }\n  return [componentProps, changedProps]\n}\n\nexport const defineSerializer = (target, maxBytes = 5000000) => {\n  const buffer = new ArrayBuffer(maxBytes)\n  const view = new DataView(buffer)\n\n  const [componentProps, changedProps] = canonicalize(target)\n\n  return ents => {\n    if (!ents.length) return\n\n    let where = 0\n    // iterate over component props\n    for (let pid = 0; pid < componentProps.length; pid++) {\n      const prop = componentProps[pid]\n      const diff = changedProps.has(prop)\n      \n      // write pid\n      view.setUint8(where, pid)\n      where += 1\n\n      // save space for entity count\n      const countWhere = where\n      where += 4\n      \n      let count = 0\n      // write eid,val\n      for (let i = 0; i < ents.length; i++) {\n        const eid = ents[i]\n\n        // skip if diffing and no change\n        if (diff && prop[eid] === prop[$serializeShadow][eid]) {\n          continue\n        }\n\n        prop[$serializeShadow][eid] = prop[eid]\n\n        count++\n\n        // write eid\n        view.setUint32(where, eid)\n        where += 4\n\n        // if property is an array\n        if (ArrayBuffer.isView(prop[eid])) {\n          const type = prop[eid].constructor.name.replace('Array', '')\n          const indexType = prop[eid]._indexType\n          const indexBytes = prop[eid]._indexBytes\n\n          // add space for count of dirty array elements\n          const countWhere2 = where\n          where += 1\n\n          let count2 = 0\n\n          // write array values\n          for (let i = 0; i < prop[eid].length; i++) {\n            const val = prop[eid][i]\n            \n            // write array index\n            view[`set${indexType}`](where, i)\n            where += indexBytes\n\n            // write value at that index\n            view[`set${type}`](where, val)\n            where += prop[eid].BYTES_PER_ELEMENT\n            count2++\n          }\n\n          view[`set${indexType}`](countWhere2, count2)\n        } else {\n          // regular property values\n          const type = prop.constructor.name.replace('Array', '')\n          // set value next [type] bytes\n          view[`set${type}`](where, prop[eid])\n          where += prop.BYTES_PER_ELEMENT\n        }\n      }\n\n      view.setUint32(countWhere, count)\n    }\n    return buffer.slice(0, where)\n  }\n}\n\nexport const defineDeserializer = (target) => {\n  const [componentProps] = canonicalize(target)\n  return (packet) => {\n    const view = new DataView(packet)\n    let where = 0\n\n    // pid\n    const pid = view.getUint8(where)\n    where += 1\n\n    // entity count\n    const entityCount = view.getUint32(where)\n    where += 4\n\n    // typed array\n    const ta = componentProps[pid]\n\n    // Get the properties and set the new state\n    for (let i = 0; i < entityCount; i++) {\n      const eid = view.getUint32(where)\n      where += 4\n\n      if (ArrayBuffer.isView(ta[eid])) {\n        const array = ta[eid]\n        const count = view[`get${array._indexType}`]\n        where += array._indexBytes\n\n        // iterate over count\n        for (let i = 0; i < count; i++) {\n          const value = view[`get${array.constructor.name.replace('Array', '')}`](where)\n          where += array.BYTES_PER_ELEMENT\n\n          ta[eid][i] = value\n        }\n      } else {\n        let value = view[`get${ta.constructor.name.replace('Array', '')}`](where)\n        where += ta.BYTES_PER_ELEMENT\n\n        ta[eid] = value\n      }\n    }\n  }\n}","import { $managerSize } from './DataManager.js'\nimport { $componentMap } from './Component.js'\nimport { $entityMasks, $entityEnabled, getEntityCursor } from './Entity.js'\nimport { diff } from './Serialize.js'\n\nexport function Not(c) { return function QueryNot() { return c } }\nexport function Changed(c) { return function QueryChanged() { return c } }\n\nexport const $queries = Symbol('queries')\nexport const $queryMap = Symbol('queryMap')\nexport const $queryComponents = Symbol('queryComponents')\nexport const $enterQuery = Symbol('enterQuery')\nexport const $exitQuery = Symbol('exitQuery')\n\nexport const enterQuery = (world, query, fn) => {\n  if (!world[$queryMap].get(query)) registerQuery(world, query)\n  world[$queryMap].get(query).enter = fn\n}\n\nexport const exitQuery = (world, query, fn) => {\n  if (!world[$queryMap].get(query)) registerQuery(world, query)\n  world[$queryMap].get(query).exit = fn\n}\n\nexport const registerQuery = (world, query) => {\n  if (!world[$queryMap].get(query)) world[$queryMap].set(query, {})\n\n  let components = []\n  let notComponents = []\n  let changedComponents = []\n  query[$queryComponents].forEach(c => {\n    if (typeof c === 'function') {\n      if (c.name === 'QueryNot') {\n        notComponents.push(c())\n      }\n      if (c.name === 'QueryChanged') {\n        changedComponents.push(c())\n        components.push(c())\n      }\n    } else {\n      components.push(c)\n    }\n  })\n\n  const mapComponents = c => world[$componentMap].get(c)\n\n  const size = components.reduce((a,c) => c[$managerSize] > a ? c[$managerSize] : a, 0)\n  \n  const entities = []\n  const changed = []\n  const indices = new Uint32Array(size)\n  const enabled = new Uint8Array(size)\n  const generations = components\n    .concat(notComponents)\n    .map(mapComponents)\n    .map(c => c.generationId)\n    .reduce((a,v) => {\n      if (a.includes(v)) return a\n      a.push(v)\n      return a\n    }, [])\n    \n  const reduceBitmasks = (a,c) => {\n    if (!a[c.generationId]) a[c.generationId] = 0\n    a[c.generationId] |= c.bitflag\n    return a\n  }\n  const masks = components\n    .map(mapComponents)\n    .reduce(reduceBitmasks, {})\n\n  const notMasks = components\n    .map(mapComponents)\n    .reduce((a,c) => {\n      if (!a[c.generationId] && notComponents.includes(c)) a[c.generationId] = 0\n      a[c.generationId] |= c.bitflag\n      return a\n    }, {})\n\n  const flatProps = components\n    .map(c => c._flatten ? c._flatten() : [c])\n    .reduce((a,v) => a.concat(v), [])\n\n  Object.assign(\n    world[$queryMap].get(query), { \n      entities,\n      changed,\n      enabled,\n      components,\n      notComponents,\n      changedComponents,\n      masks,\n      notMasks,\n      generations,\n      indices,\n      flatProps\n    }\n  )\n  world[$queries].add(query)\n\n  for (let eid = 0; eid < getEntityCursor(); eid++) {\n    if (!world[$entityEnabled][eid]) continue\n    if (queryCheckEntity(world, query, eid)) {\n      queryAddEntity(world, query, eid)\n    }\n  }\n}\n\nexport const defineQuery = (components) => {\n  const query = function (world) {\n    if (!world[$queryMap].has(query)) registerQuery(world, query)\n    const q = world[$queryMap].get(query) \n    if (q.changedComponents.length) return diff(world, query)\n    return q.entities\n  }\n  query[$queryComponents] = components\n  return query\n}\n\n// TODO: archetype graph\nexport const queryCheckEntity = (world, query, eid) => {\n  const { masks, notMasks, generations } = world[$queryMap].get(query)\n  for (let i = 0; i < generations.length; i++) {\n    const generationId = generations[i]\n    const qMask = masks[generationId]\n    const qNotMask = notMasks[generationId]\n    const eMask = world[$entityMasks][generationId][eid]\n    // if (qNotMask && !(eMask & qNotMask)) {\n    //   return false\n    // }\n    if ((eMask & qMask) !== qMask) {\n      return false\n    }\n  }\n  return true\n}\n\nconst queryCheckComponent = (world, query, component) => {\n  const { generationId, bitflag } = world[$componentMap].get(component)\n  const { masks } = world[$queryMap].get(query)\n  const mask = masks[generationId]\n  return (mask & bitflag) === bitflag\n}\n\nexport const queryCheckComponents = (world, query, components) => {\n  return components.every(c => queryCheckComponent(world, query, c))\n}\n\nexport const queryAddEntity = (world, query, eid) => {\n  const q = world[$queryMap].get(query)\n  if (q.enabled[eid]) return\n  q.enabled[eid] = true\n  q.entities.push(eid)\n  q.indices[eid] = q.entities.length - 1\n  if (q.enter) q.enter(eid)\n}\n\nexport const queryRemoveEntity = (world, query, eid) => {\n  const q = world[$queryMap].get(query)\n  if (!q.enabled[eid]) return\n  q.enabled[eid] = false\n  q.entities.splice(q.indices[eid])\n  if (q.exit) q.exit(eid)\n}\n","import { alloc } from './DataManager.js'\nimport { $queryComponents, $queries, queryAddEntity, queryRemoveEntity, queryCheckEntity, queryCheckComponents } from './Query.js'\nimport { $bitflag, $size } from './World.js'\nimport { $entityMasks } from './Entity.js'\n\nexport const $componentMap = Symbol('componentMap')\nexport const $deferredComponentRemovals = Symbol('de$deferredComponentRemovals')\n\nexport const defineComponent = (schema) => alloc(schema)\n\nexport const incrementBitflag = (world) => {\n  world[$bitflag] *= 2\n  if (world[$bitflag] >= 2**32) {\n    world[$bitflag] = 1\n    world[$entityMasks].push(new Uint32Array(world[$size]))\n  }\n}\n\nexport const registerComponent = (world, component) => {\n  world[$componentMap].set(component, { \n    generationId: world[$entityMasks].length - 1,\n    bitflag: world[$bitflag],\n    manager: component\n  })\n\n  incrementBitflag(world)\n}\n\nexport const registerComponents = (world, components) => {\n  components.forEach(c => registerComponent(world, c))\n}\n\nexport const hasComponent = (world, component, eid) => {\n  const { generationId, bitflag } = world[$componentMap].get(component)\n  const mask = world[$entityMasks][generationId][eid]\n  return (mask & bitflag) === bitflag\n}\n\nexport const addComponent = (world, component, eid) => {\n  if (hasComponent(world, component, eid)) return\n\n  // Add bitflag to entity bitmask\n  const { generationId, bitflag } = world[$componentMap].get(component)\n  world[$entityMasks][generationId][eid] |= bitflag\n\n  // Zero out each property value\n  // component._reset(eid)\n\n  // todo: archetype graph\n  const queries = world[$queries]\n  queries.forEach(query => {\n    const components = query[$queryComponents]\n    if (!queryCheckComponents(world, query, components)) return\n    const match = queryCheckEntity(world, query, eid)\n    if (match) queryAddEntity(world, query, eid)\n  })\n}\n\nexport const removeComponent = (world, component, eid) => world[$deferredComponentRemovals].push(component, eid)\n\nexport const commitComponentRemovals = (world) => {\n  const deferredComponentRemovals = world[$deferredComponentRemovals]\n  for (let i = 0; i < deferredComponentRemovals.length; i += 2) {\n    const component = deferredComponentRemovals[i]\n    const eid = deferredComponentRemovals[i + 1]\n\n    const { generationId, bitflag } = world[$componentMap].get(component)\n\n    if (!(world[$entityMasks][generationId][eid] & bitflag)) return\n\n    // Remove flag from entity bitmask\n    world[$entityMasks][generationId][eid] &= ~bitflag\n\n    // todo: archetype graph\n    const queries = world[$queries]\n    queries.forEach(query => {\n      const components = query[$queryComponents]\n      if (!queryCheckComponents(world, query, components)) return\n      const match = queryCheckEntity(world, query, eid)\n      if (match) queryRemoveEntity(world, query, eid)\n    })\n  }\n  deferredComponentRemovals.length = 0\n}\n","import { $componentMap, $deferredComponentRemovals } from './Component.js'\nimport { $queryMap, $queries } from './Query.js'\nimport { $entityEnabled, $entityMasks, $removedEntities, $deferredEntityRemovals } from './Entity.js'\n\nexport const $size = Symbol('size')\nexport const $bitflag = Symbol('bitflag')\n\nexport const createWorld = (size = 1000000) => {\n  const world = {}\n  \n  world[$size] = size\n\n  world[$entityEnabled] = new Uint8Array(size)\n  world[$entityMasks] = [new Uint32Array(size)]\n  world[$removedEntities] = []\n\n  world[$bitflag] = 1\n\n  world[$componentMap] = new Map()\n\n  world[$queryMap] = new Map()\n  world[$queries] = new Set()\n\n  world[$deferredComponentRemovals] = []\n  world[$deferredEntityRemovals] = []\n\n  return world\n}","import { commitComponentRemovals } from './Component.js'\nimport { commitEntityRemovals } from './Entity.js'\n\nexport const defineSystem = (update) => {\n  const system = world => {\n    update(world)\n    commitComponentRemovals(world)\n    commitEntityRemovals(world)\n  }\n\n  Object.defineProperty(system, 'name', {\n    value: (update.name || \"AnonymousSystem\") + \"_internal\",\n    configurable: true,\n  })\n\n  return system\n}","import { createWorld } from './World.js'\nimport { addEntity, removeEntity } from './Entity.js'\nimport { defineComponent, registerComponent, registerComponents, hasComponent, addComponent, removeComponent } from './Component.js'\nimport { defineSystem } from './System.js'\nimport { defineQuery, enterQuery, exitQuery, Changed, Not } from './Query.js'\nimport { defineSerializer, defineDeserializer } from './Serialize.js'\nimport { TYPES_ENUM } from './DataManager.js'\n\nexport const pipe = fns => world => {\n  for (let i = 0; i < fns.length; i++) {\n    const fn = fns[i]\n    fn(world)\n  }\n}\n\nexport const Types = TYPES_ENUM\n\nexport {\n\n  createWorld,\n  addEntity,\n  removeEntity,\n\n  registerComponent,\n  registerComponents,\n  defineComponent,\n  addComponent,\n  removeComponent,\n  hasComponent,\n  \n  defineQuery,\n  Changed,\n  Not,\n  enterQuery,\n  exitQuery,\n  \n  defineSystem,\n  \n  defineSerializer,\n  defineDeserializer,\n\n}\n"],"names":["TYPES_ENUM","bool","i8","ui8","ui8c","i16","ui16","i32","ui32","f32","f64","TYPES","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","UNSIGNED_MAX","uint8","uint16","uint32","grow","ta","amount","newTa","constructor","ArrayBuffer","buffer","byteLength","BYTES_PER_ELEMENT","set","roundToMultiple4","x","Math","ceil","managers","$managerRef","Symbol","$managerSize","$managerMaps","$managerSubarrays","$managerCursor","$managerRemoved","$queryShadow","$serializeShadow","alloc","schema","size","$manager","name","props","Object","keys","arrays","filter","p","Array","isArray","cursors","reduce","a","type","totalBytes","length","indexType","Error","relevantArrays","summedBytesPerElement","summedLength","array","_indexType","_indexBytes","end","eid","from","to","subarray","_reset","fill","_set","values","forEach","prop","Type","_boolType","index","Manager","queryShadowBuffer","serializeShadowBuffer","defineProperty","value","_props","isView","mapping","_mapping","enum","obj","_get","flattened","flat","push","_flatten","console","warn","undefined","indexOf","_grow","$entityMasks","$entityEnabled","$deferredEntityRemovals","$removedEntities","globalEntityCursor","getEntityCursor","addEntity","world","removed","$size","enabled","$componentMap","component","manager","pop","removeEntity","commitEntityRemovals","deferred","queries","$queries","i","query","queryRemoveEntity","diff","q","$queryMap","get","changed","flatProps","entities","dirty","pid","canonicalize","target","componentProps","changedProps","Set","map","add","v","concat","c","defineSerializer","maxBytes","view","DataView","ents","where","has","setUint8","countWhere","count","setUint32","replace","indexBytes","countWhere2","count2","val","slice","defineDeserializer","packet","getUint8","entityCount","getUint32","Not","QueryNot","Changed","QueryChanged","$queryComponents","enterQuery","fn","registerQuery","enter","exitQuery","exit","components","notComponents","changedComponents","mapComponents","indices","generations","generationId","includes","reduceBitmasks","bitflag","masks","notMasks","assign","queryCheckEntity","queryAddEntity","defineQuery","qMask","qNotMask","eMask","queryCheckComponent","mask","queryCheckComponents","every","splice","$deferredComponentRemovals","defineComponent","incrementBitflag","$bitflag","registerComponent","registerComponents","hasComponent","addComponent","match","removeComponent","commitComponentRemovals","deferredComponentRemovals","createWorld","Map","defineSystem","update","system","configurable","pipe","fns","Types"],"mappings":"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"}