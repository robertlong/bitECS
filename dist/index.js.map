{"version":3,"file":"index.js","sources":["../src/Storage.js","../src/Entity.js","../src/Serialize.js","../src/Query.js","../src/Component.js","../src/World.js","../src/System.js","../src/index.js"],"sourcesContent":["export const TYPES_ENUM = {\n  i8: 'i8',\n  ui8: 'ui8',\n  ui8c: 'ui8c',\n  i16: 'i16',\n  ui16: 'ui16',\n  i32: 'i32',\n  ui32: 'ui32',\n  f32: 'f32',\n  f64: 'f64'\n}\n\nexport const TYPES_NAMES = {\n  i8: 'Int8',\n  ui8: 'Uint8',\n  ui8c: 'Uint8Clamped',\n  i16: 'Int16',\n  ui16: 'Uint16',\n  i32: 'Int32',\n  ui32: 'Uint32',\n  f32: 'Float32',\n  f64: 'Float64'\n}\n\nexport const TYPES = {\n  i8: Int8Array,\n  ui8: Uint8Array,\n  ui8c: Uint8ClampedArray,\n  i16: Int16Array,\n  ui16: Uint16Array,\n  i32: Int32Array,\n  ui32: Uint32Array,\n  f32: Float32Array,\n  f64: Float64Array\n}\n\nconst UNSIGNED_MAX = {\n  uint8: 2**8,\n  uint16: 2**16,\n  uint32: 2**32\n}\n\nconst roundToMultiple4 = x => Math.ceil(x / 4) * 4\n\nexport const $storeRef = Symbol('storeRef')\nexport const $storeSize = Symbol('storeSize')\nexport const $storeMaps = Symbol('storeMaps')\nexport const $storeFlattened = Symbol('storeFlattened')\nexport const $storeBase = Symbol('storeBase')\n\nexport const $storeArrayCounts = Symbol('storeArrayCount')\nexport const $storeSubarrays = Symbol('storeSubarrays')\nexport const $storeCursor = Symbol('storeCursor')\nexport const $subarrayCursors = Symbol('subarrayCursors')\nexport const $subarray = Symbol('subarray')\n\nexport const $queryShadow = Symbol('queryShadow')\nexport const $serializeShadow = Symbol('serializeShadow')\n\nexport const $indexType = Symbol('indexType')\nexport const $indexBytes = Symbol('indexBytes')\n\nconst stores = {}\n\nexport const resize = (ta, size) => {\n  const newBuffer = new ArrayBuffer(size * ta.BYTES_PER_ELEMENT)\n  const newTa = new ta.constructor(newBuffer)\n  newTa.set(ta, 0)\n  return newTa\n}\n\nconst resizeRecursive = (store, size) => {\n  Object.keys(store).forEach(key => {\n    const ta = store[key]\n    if (ta[$subarray]) return\n    else if (ArrayBuffer.isView(ta)) {\n      store[key] = resize(ta, size)\n      store[key][$queryShadow] = resize(ta[$queryShadow], size)\n      store[key][$serializeShadow] = resize(ta[$serializeShadow], size)\n    } else if (typeof ta === 'object') {\n      resizeRecursive(store[key], size)\n    }\n  })\n}\n\nconst resizeSubarrays = (store, size) => {\n  const cursors = store[$subarrayCursors] = {}\n  Object.keys(store[$storeSubarrays]).forEach(type => {\n    const arrayCount = store[$storeArrayCounts]\n    const length = store[0].length\n    const summedBytesPerElement = Array(arrayCount).fill(0).reduce((a, p) => a + TYPES[type].BYTES_PER_ELEMENT, 0)\n    const summedLength = Array(arrayCount).fill(0).reduce((a, p) => a + length, 0)\n    const buffer = new ArrayBuffer(roundToMultiple4(summedBytesPerElement * summedLength * size))\n    const array = new TYPES[type](buffer)\n\n    array.set(store[$storeSubarrays][type].buffer, 0)\n\n    store[$storeSubarrays][type] = array\n    store[$storeSubarrays][type][$queryShadow] = array.slice(0)\n    store[$storeSubarrays][type][$serializeShadow] = array.slice(0)\n\n    let end = 0\n    for (let eid = 0; eid < size; eid++) {\n      const from = cursors[type] + (eid * length)\n      const to = from + length\n      store[eid] = store[$storeSubarrays][type].subarray(from, to)\n      store[eid][$queryShadow] = store[$storeSubarrays][type][$queryShadow].subarray(from, to)\n      store[eid][$serializeShadow] = store[$storeSubarrays][type][$serializeShadow].subarray(from, to)\n      store[eid][$subarray] = true\n      store[eid][$indexType] = array[$indexType]\n      store[eid][$indexBytes] = array[$indexBytes]\n      end = to\n    }\n  })\n}\n\nexport const resizeStore = (store, size) => {\n  store[$storeSize] = size\n  resizeRecursive(store, size)\n  resizeSubarrays(store, size)\n}\n\nexport const resetStore = store => {\n  store[$storeFlattened].forEach(ta => {\n    ta.fill(0)\n  })\n  Object.keys(store[$storeSubarrays]).forEach(key => {\n    store[$storeSubarrays][key].fill(0)\n  })\n}\n\nexport const resetStoreFor = (store, eid) => {\n  store[$storeFlattened].forEach(ta => {\n    if (ArrayBuffer.isView(ta)) ta[eid] = 0\n    else ta[eid].fill(0)\n  })\n}\n\nconst createTypeStore = (type, length) => {\n  const totalBytes = length * TYPES[type].BYTES_PER_ELEMENT\n  const buffer = new ArrayBuffer(totalBytes)\n  return new TYPES[type](buffer)\n}\n\nconst createArrayStore = (metadata, type, length) => {\n  const size = metadata[$storeSize]\n  const store = Array(size)\n\n  const cursors = metadata[$subarrayCursors]\n  const indexType =\n    length < UNSIGNED_MAX.uint8\n      ? 'ui8'\n      : length < UNSIGNED_MAX.uint16\n        ? 'ui16'\n        : 'ui32'\n\n  if (!length) throw new Error('❌ Must define a length for component array.')\n  if (!TYPES[type]) throw new Error(`❌ Invalid component array property type ${type}.`)\n\n  // create buffer for type if it does not already exist\n  if (!metadata[$storeSubarrays][type]) {\n    const arrayCount = metadata[$storeArrayCounts][type]\n    const summedLength = Array(arrayCount).fill(0).reduce((a, p) => a + length, 0)\n    \n    // for threaded impl\n    // const summedBytesPerElement = Array(arrayCount).fill(0).reduce((a, p) => a + TYPES[type].BYTES_PER_ELEMENT, 0)\n    // const totalBytes = roundToMultiple4(summedBytesPerElement * summedLength * size)\n    // const buffer = new ArrayBuffer(totalBytes)\n\n    const array = new TYPES[type](summedLength * size)\n\n    metadata[$storeSubarrays][type] = array\n    metadata[$storeSubarrays][type][$queryShadow] = array.slice(0)\n    metadata[$storeSubarrays][type][$serializeShadow] = array.slice(0)\n    \n    array[$indexType] = TYPES_NAMES[indexType]\n    array[$indexBytes] = TYPES[indexType].BYTES_PER_ELEMENT\n  }\n\n  // pre-generate subarrays for each eid\n  let end = 0\n  for (let eid = 0; eid < size; eid++) {\n    const from = cursors[type] + (eid * length)\n    const to = from + length\n    store[eid] = metadata[$storeSubarrays][type].subarray(from, to)\n    store[eid].from = from\n    store[eid].to = to\n    store[eid][$queryShadow] = metadata[$storeSubarrays][type][$queryShadow].subarray(from, to)\n    store[eid][$serializeShadow] = metadata[$storeSubarrays][type][$serializeShadow].subarray(from, to)\n    store[eid][$subarray] = true\n    store[eid][$indexType] = TYPES_NAMES[indexType]\n    store[eid][$indexBytes] = TYPES[indexType].BYTES_PER_ELEMENT\n    end = to\n  }\n\n  cursors[type] = end\n\n  return store\n}\n\nconst createShadows = (store) => {\n  store[$queryShadow] = store.slice(0)\n  store[$serializeShadow] = store.slice(0)\n}\n\nconst isArrayType = x => Array.isArray(x) && typeof x[0] === 'string' && typeof x[1] === 'number'\n\nexport const createStore = (schema, size=1000000) => {\n  const $store = Symbol('store')\n\n  if (!schema) return {}\n\n  schema = JSON.parse(JSON.stringify(schema))\n\n  const arrayCounts = {}\n  const collectArrayCounts = s => {\n    const keys = Object.keys(s)\n    for (const k of keys) {\n      if (isArrayType(s[k])) {\n        if (!arrayCounts[s[k][0]]) arrayCounts[s[k][0]] = 0\n        arrayCounts[s[k][0]]++\n      } else if (s[k] instanceof Object) {\n        collectArrayCounts(s[k])\n      }\n    }\n  }\n  collectArrayCounts(schema)\n\n  const metadata = {\n    [$storeSize]: size,\n    [$storeMaps]: {},\n    [$storeSubarrays]: {},\n    [$storeRef]: $store,\n    [$storeCursor]: 0,\n    [$subarrayCursors]: Object.keys(TYPES).reduce((a, type) => ({ ...a, [type]: 0 }), {}),\n    [$storeArrayCounts]: arrayCounts,\n    [$storeFlattened]: []\n  }\n\n  if (schema instanceof Object && Object.keys(schema).length) {\n\n    const recursiveTransform = (a, k) => {\n\n      if (typeof a[k] === 'string') {\n\n        a[k] = createTypeStore(a[k], size)\n        a[k][$storeBase] = () => stores[$store]\n        metadata[$storeFlattened].push(a[k])\n        createShadows(a[k])\n\n      } else if (isArrayType(a[k])) {\n        \n        const [type, length] = a[k]\n        a[k] = createArrayStore(metadata, type, length)\n        a[k][$storeBase] = () => stores[$store]\n        metadata[$storeFlattened].push(a[k])\n        // Object.freeze(a[k])\n\n      } else if (a[k] instanceof Object) {\n        \n        a[k] = Object.keys(a[k]).reduce(recursiveTransform, a[k])\n        // Object.freeze(a[k])\n        \n      }\n\n      return a\n    }\n\n    stores[$store] = Object.assign(Object.keys(schema).reduce(recursiveTransform, schema), metadata)\n    stores[$store][$storeBase] = () => stores[$store]\n\n    // Object.freeze(stores[$store])\n\n    return stores[$store]\n\n  }\n\n  // tag component\n  stores[$store] = metadata\n  stores[$store][$storeBase] = () => stores[$store]\n\n  return stores[$store]\n}\n\nexport const free = (store) => {\n  delete stores[store[$storeRef]]\n}","import { $componentMap } from './Component.js'\nimport { $queries, $queryMap, queryRemoveEntity } from './Query.js'\nimport { resize, resizeStore } from './Storage.js'\nimport { $size, $warningSize } from './World.js'\n\nexport const $entityMasks = Symbol('entityMasks')\nexport const $entityEnabled = Symbol('entityEnabled')\nexport const $entityArray = Symbol('entityArray')\nexport const $entityIndices = Symbol('entityIndices')\nexport const $removedEntities = Symbol('removedEntities')\n\nconst NONE = 2**32\n\n// need a global EID cursor which all worlds and all components know about\n// so that world entities can posess entire rows spanning all component tables\nlet globalEntityCursor = 0\n// removed eids should also be global to prevent memory leaks\nconst removed = []\n\nexport const resetGlobals = () => {\n  globalEntityCursor = 0\n  removed.length = 0\n}\n\nexport const getEntityCursor = () => globalEntityCursor\nexport const getRemovedEntities = () => removed\n\nexport const incrementEntityCursor = () => globalEntityCursor++\n\nexport const resizeWorld = (world, size) => {\n  world[$size] = size\n  \n  world[$componentMap].forEach(c => {\n    resizeStore(c.store, size)\n  })\n  \n  world[$queryMap].forEach(q => {\n    q.indices = resize(q.indices, size)\n    q.enabled = resize(q.enabled, size)\n  })\n  \n  world[$entityEnabled] = resize(world[$entityEnabled], size)\n  world[$entityIndices] = resize(world[$entityIndices], size)\n  \n  for (let i = 0; i < world[$entityMasks].length; i++) {\n    const masks = world[$entityMasks][i];\n    world[$entityMasks][i] = resize(masks, size)    \n  }\n}\n\nexport const addEntity = (world) => {\n  const enabled = world[$entityEnabled]\n  \n  // if data stores are 80% full\n  if (globalEntityCursor >= world[$warningSize]) {\n    // grow by half the original size rounded up to a multiple of 4\n    const size = world[$size]\n    const amount = Math.ceil((size/2) / 4) * 4\n    resizeWorld(world, size + amount)\n    world[$warningSize] = world[$size] - (world[$size] / 5)\n  }\n\n  const eid = removed.length > 0 ? removed.pop() : globalEntityCursor\n  enabled[eid] = 1\n  globalEntityCursor++\n  world[$entityIndices][eid] = world[$entityArray].push(eid) - 1\n\n  return eid\n}\n\nexport const removeEntity = (world, eid) => {\n  const enabled = world[$entityEnabled]\n\n  // Check if entity is already removed\n  if (enabled[eid] === 0) return\n\n  // Remove entity from all queries\n  // TODO: archetype graph\n  world[$queries].forEach(query => {\n    queryRemoveEntity(world, query, eid)\n  })\n\n  // Free the entity\n  removed.push(eid)\n  enabled[eid] = 0\n\n  // pop swap\n  const index = world[$entityIndices][eid]\n\n  const swapped = world[$entityArray].pop()\n  if (swapped !== eid) {\n    world[$entityArray][index] = swapped\n    world[$entityIndices][swapped] = index\n  }\n  world[$entityIndices][eid] = NONE\n\n  // Clear entity bitmasks\n  for (let i = 0; i < world[$entityMasks].length; i++) world[$entityMasks][i][eid] = 0\n}\n","import { $queryMap } from \"./Query.js\"\nimport { $indexBytes, $indexType, $queryShadow, $serializeShadow, $storeBase, $storeFlattened } from \"./Storage.js\"\nimport { $componentMap, addComponent, hasComponent } from \"./Component.js\"\nimport { $entityArray, $entityEnabled, addEntity } from \"./Entity.js\"\n\nexport const diff = (world, query) => {\n  const q = world[$queryMap].get(query)\n  q.changed.length = 0\n  const flat = q.flatProps\n  for (let i = 0; i < q.entities.length; i++) {\n    const eid = q.entities[i]\n    let dirty = false\n    for (let pid = 0; pid < flat.length; pid++) {\n      const prop = flat[pid]\n      if (ArrayBuffer.isView(prop[eid])) {\n        for (let i = 0; i < prop[eid].length; i++) {\n          if (prop[eid][i] !== prop[eid][$queryShadow][i]) {\n            dirty = true\n            prop[eid][$queryShadow][i] = prop[eid][i]\n          }\n        }\n      } else {\n        if (prop[eid] !== prop[$queryShadow][eid]) {\n          dirty = true\n          prop[$queryShadow][eid] = prop[eid]\n        }\n      }\n    }\n    if (dirty) q.changed.push(eid)\n  }\n  return q.changed\n}\n\nconst canonicalize = (target) => {\n  let componentProps = []\n  let changedProps = new Set()\n  if (Array.isArray(target)) {\n    componentProps = target\n      .map(p => {\n        if (typeof p === 'function' && p.name === 'QueryChanged') {\n          p()[$storeFlattened].forEach(prop => {\n            changedProps.add(prop)\n          })\n          return p()[$storeFlattened]\n        }\n        if (Object.getOwnPropertySymbols(p).includes($storeFlattened)) {\n          return p[$storeFlattened]\n        }\n        if (Object.getOwnPropertySymbols(p).includes($storeBase)) {\n          return p\n        }\n      })\n      .reduce((a,v) => a.concat(v), [])\n  }\n  return [componentProps, changedProps]\n}\n\nexport const defineSerializer = (target, maxBytes = 20_000_000) => {\n  const isWorld = Object.getOwnPropertySymbols(target).includes($componentMap)\n\n  let [componentProps, changedProps] = canonicalize(target)\n\n  // TODO: calculate max bytes based on target\n\n  const buffer = new ArrayBuffer(maxBytes)\n  const view = new DataView(buffer)\n\n  return ents => {\n    if (isWorld) {\n      componentProps = []\n      target[$componentMap].forEach((c, component) => {\n        componentProps.push(...component[$storeFlattened])\n      })\n    }\n    \n    if (Object.getOwnPropertySymbols(ents).includes($componentMap)) {\n      ents = ents[$entityArray]\n    }\n\n    if (!ents.length) return\n\n    let where = 0\n\n    // iterate over component props\n    for (let pid = 0; pid < componentProps.length; pid++) {\n      const prop = componentProps[pid]\n      const diff = changedProps.has(prop)\n      \n      // write pid\n      view.setUint8(where, pid)\n      where += 1\n\n      // save space for entity count\n      const countWhere = where\n      where += 4\n      \n      let count = 0\n      // write eid,val\n      for (let i = 0; i < ents.length; i++) {\n        const eid = ents[i]\n\n        // skip if diffing and no change\n        if (diff && prop[eid] === prop[$serializeShadow][eid]) {\n          continue\n        }\n        \n        count++\n\n        // write eid\n        view.setUint32(where, eid)\n        where += 4\n\n        // if property is an array\n        if (ArrayBuffer.isView(prop[eid])) {\n          const type = prop[eid].constructor.name.replace('Array', '')\n          const indexType = prop[eid][$indexType]\n          const indexBytes = prop[eid][$indexBytes]\n\n          // add space for count of dirty array elements\n          const countWhere2 = where\n          where += 1\n\n          let count2 = 0\n\n          // write index,value\n          for (let i = 0; i < prop[eid].length; i++) {\n            const value = prop[eid][i]\n\n            if (diff && prop[eid][i] === prop[eid][$serializeShadow][i]) {\n              continue\n            }\n\n            // write array index\n            view[`set${indexType}`](where, i)\n            where += indexBytes\n\n            // write value at that index\n            view[`set${type}`](where, value)\n            where += prop[eid].BYTES_PER_ELEMENT\n            count2++\n          }\n\n          // write total element count\n          view[`set${indexType}`](countWhere2, count2)\n\n        } else {\n          // regular property values\n          const type = prop.constructor.name.replace('Array', '')\n          // set value next [type] bytes\n          view[`set${type}`](where, prop[eid])\n          where += prop.BYTES_PER_ELEMENT\n\n          // sync shadow state\n          prop[$serializeShadow][eid] = prop[eid]\n        }\n      }\n\n      view.setUint32(countWhere, count)\n    }\n    return buffer.slice(0, where)\n  }\n}\n\nexport const defineDeserializer = (target) => {\n  const isWorld = Object.getOwnPropertySymbols(target).includes($componentMap)\n  let [componentProps] = canonicalize(target)\n  return (world, packet) => {\n    \n    if (isWorld) {\n      componentProps = []\n      target[$componentMap].forEach((c, component) => {\n        componentProps.push(...component[$storeFlattened])\n      })\n    }\n\n    const view = new DataView(packet)\n    let where = 0\n\n    while (where < packet.byteLength) {\n\n      // pid\n      const pid = view.getUint8(where)\n      where += 1\n\n      // entity count\n      const entityCount = view.getUint32(where)\n      where += 4\n\n      // typed array\n      const ta = componentProps[pid]\n\n      // Get the properties and set the new state\n      for (let i = 0; i < entityCount; i++) {\n        let eid = view.getUint32(where)\n        where += 4\n\n        // if this world hasn't seen this eid yet\n        if (!world[$entityEnabled][eid]) {\n          // make a new entity for the data\n          eid = addEntity(world)\n        }\n\n        const component = ta[$storeBase]()\n        if (!hasComponent(world, component, eid)) {\n          addComponent(world, component, eid)\n        }\n        \n        if (ArrayBuffer.isView(ta[eid])) {\n          const array = ta[eid]\n          const count = view[`get${array[$indexType]}`](where)\n          where += array[$indexBytes]\n\n          // iterate over count\n          for (let i = 0; i < count; i++) {\n            const index = view[`get${array[$indexType]}`](where)\n            where += array[$indexBytes]\n\n            const value = view[`get${array.constructor.name.replace('Array', '')}`](where)\n            where += array.BYTES_PER_ELEMENT\n\n            ta[eid][index] = value\n          }\n        } else {\n          let value = view[`get${ta.constructor.name.replace('Array', '')}`](where)\n          where += ta.BYTES_PER_ELEMENT\n\n          ta[eid] = value\n        }\n      }\n    }\n  }\n}","import { $storeFlattened, $storeSize } from './Storage.js'\nimport { $componentMap, registerComponent } from './Component.js'\nimport { $entityMasks, $entityEnabled, getEntityCursor } from './Entity.js'\nimport { diff } from './Serialize.js'\n\nexport function Not(c) { return function QueryNot() { return c } }\nexport function Changed(c) { return function QueryChanged() { return c } }\n\nexport const $queries = Symbol('queries')\nexport const $queryMap = Symbol('queryMap')\nexport const $dirtyQueries = Symbol('$dirtyQueries')\nexport const $queryComponents = Symbol('queryComponents')\nexport const $enterQuery = Symbol('enterQuery')\nexport const $exitQuery = Symbol('exitQuery')\n\nconst NONE = 2**32\n\n\n// TODO: linked list of functions\nexport const enterQuery = (world, query, fn) => {\n  if (!world[$queryMap].has(query)) registerQuery(world, query)\n  world[$queryMap].get(query).enter = fn\n}\n\nexport const exitQuery = (world, query, fn) => {\n  if (!world[$queryMap].has(query)) registerQuery(world, query)\n  world[$queryMap].get(query).exit = fn\n}\n\nexport const registerQuery = (world, query) => {\n\n  let components = []\n  let notComponents = []\n  let changedComponents = []\n\n  query[$queryComponents].forEach(c => {\n    if (typeof c === 'function') {\n      if (c.name === 'QueryNot') {\n        notComponents.push(c())\n      }\n      if (c.name === 'QueryChanged') {\n        changedComponents.push(c())\n        components.push(c())\n      }\n    } else {\n      components.push(c)\n    }\n  })\n\n  const mapComponents = c => world[$componentMap].get(c)\n\n  const size = components.concat(notComponents).reduce((a,c) => c[$storeSize] > a ? c[$storeSize] : a, 0)\n\n  const entities = []\n  const changed = []\n  const indices = new Uint32Array(size).fill(NONE)\n  const enabled = new Uint8Array(size)\n  const generations = components\n    .concat(notComponents)\n    .map (c => {\n      if (!world[$componentMap].has(c)) registerComponent(world, c)\n      return c\n    })\n    .map(mapComponents)\n    .map(c => c.generationId)\n    .reduce((a,v) => {\n      if (a.includes(v)) return a\n      a.push(v)\n      return a\n    }, [])\n\n  const reduceBitmasks = (a,c) => {\n    if (!a[c.generationId]) a[c.generationId] = 0\n    a[c.generationId] |= c.bitflag\n    return a\n  }\n  const masks = components\n    .map(mapComponents)\n    .reduce(reduceBitmasks, {})\n\n  const notMasks = notComponents\n    .map(mapComponents)\n    .reduce((a,c) => {\n      if (!a[c.generationId]) {\n        a[c.generationId] = 0\n        a[c.generationId] |= c.bitflag\n      }\n      return a\n    }, {})\n\n  const flatProps = components\n    .map(c => Object.getOwnPropertySymbols(c).includes($storeFlattened) ? c[$storeFlattened] : [c])\n    .reduce((a,v) => a.concat(v), [])\n\n  const toRemove = []\n  const entered = []\n  const exited = []\n\n  world[$queryMap].set(query, { \n    entities,\n    changed,\n    enabled,\n    components,\n    notComponents,\n    changedComponents,\n    masks,\n    notMasks,\n    generations,\n    indices,\n    flatProps,\n    toRemove,\n    entered,\n    exited,\n  })\n  \n  world[$queries].add(query)\n\n  for (let eid = 0; eid < getEntityCursor(); eid++) {\n    if (!world[$entityEnabled][eid]) continue\n    if (queryCheckEntity(world, query, eid)) {\n      queryAddEntity(world, query, eid)\n    }\n  }\n}\n\nconst queryHooks = (q) => {\n  while (q.entered.length) if (q.enter) { q.enter(q.entered.shift()) } else q.entered.length = 0\n  while (q.exited.length) if (q.exit) { q.exit(q.exited.shift()) } else q.exited.length = 0\n}\n\nexport const defineQuery = (components) => {\n  const query = function (world) {\n    if (!world[$queryMap].has(query)) registerQuery(world, query)\n    const q = world[$queryMap].get(query) \n    queryHooks(q)\n    queryCommitRemovals(world, q)\n    if (q.changedComponents.length) return diff(world, query)\n    return q.entities\n  }\n  query[$queryComponents] = components\n  return query\n}\n\n// TODO: archetype graph\nexport const queryCheckEntity = (world, query, eid) => {\n  const { masks, notMasks, generations } = world[$queryMap].get(query)\n  for (let i = 0; i < generations.length; i++) {\n    const generationId = generations[i]\n    const qMask = masks[generationId]\n    const qNotMask = notMasks[generationId]\n    const eMask = world[$entityMasks][generationId][eid]\n    if (qNotMask && (eMask & qNotMask) !== 0) {\n      return false\n    }\n    if (qMask && (eMask & qMask) !== qMask) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const queryCheckComponent = (world, query, component) => {\n  const { generationId, bitflag } = world[$componentMap].get(component)\n  const { masks } = world[$queryMap].get(query)\n  const mask = masks[generationId]\n  return (mask & bitflag) === bitflag\n}\n\nexport const queryAddEntity = (world, query, eid) => {\n  const q = world[$queryMap].get(query)\n  if (q.enabled[eid]) return\n  q.enabled[eid] = true\n  q.entities.push(eid)\n  q.indices[eid] = q.entities.length - 1\n  q.entered.push(eid)\n}\n\nconst queryCommitRemovals = (world, q) => {\n  while (q.toRemove.length) {\n    const eid = q.toRemove.pop()\n    const index = q.indices[eid]\n    if (index === NONE) continue\n\n    const swapped = q.entities.pop()\n    if (swapped !== eid) {\n      q.entities[index] = swapped\n      q.indices[swapped] = index\n    }\n    q.indices[eid] = NONE\n  }\n  world[$dirtyQueries].delete(q)\n}\n\nexport const commitRemovals = (world) => {\n  world[$dirtyQueries].forEach(q => {\n    queryCommitRemovals(world, q)\n  })\n}\n\nexport const queryRemoveEntity = (world, query, eid) => {\n  const q = world[$queryMap].get(query)\n  if (!q.enabled[eid]) return\n  q.enabled[eid] = false\n  q.toRemove.push(eid)\n  world[$dirtyQueries].add(q)\n  q.exited.push(eid)\n}","import { $storeSize, createStore, resetStoreFor, resizeStore } from './Storage.js'\nimport { $queries, queryAddEntity, queryRemoveEntity, queryCheckEntity, queryCheckComponent } from './Query.js'\nimport { $bitflag, $size } from './World.js'\nimport { $entityMasks } from './Entity.js'\n\nexport const $componentMap = Symbol('componentMap')\n\nexport const defineComponent = (schema) => createStore(schema)\n\nexport const incrementBitflag = (world) => {\n  world[$bitflag] *= 2\n  if (world[$bitflag] >= 2**32) {\n    world[$bitflag] = 1\n    world[$entityMasks].push(new Uint32Array(world[$size]))\n  }\n}\n\nexport const registerComponent = (world, component) => {\n  world[$componentMap].set(component, { \n    generationId: world[$entityMasks].length - 1,\n    bitflag: world[$bitflag],\n    store: component\n  })\n\n  if (component[$storeSize] < world[$size]) {\n    resizeStore(component, world[$size])\n  }\n\n  incrementBitflag(world)\n}\n\nexport const registerComponents = (world, components) => {\n  components.forEach(c => registerComponent(world, c))\n}\n\nexport const hasComponent = (world, component, eid) => {\n  const registeredComponent = world[$componentMap].get(component)\n  if (!registeredComponent) return\n  const { generationId, bitflag } = registeredComponent\n  const mask = world[$entityMasks][generationId][eid]\n  return (mask & bitflag) === bitflag\n}\n\nexport const addComponent = (world, component, eid, reset=false) => {\n  if (!world[$componentMap].has(component)) registerComponent(world, component)\n  if (hasComponent(world, component, eid)) return\n\n  // Add bitflag to entity bitmask\n  const { generationId, bitflag } = world[$componentMap].get(component)\n  world[$entityMasks][generationId][eid] |= bitflag\n\n  // todo: archetype graph\n  world[$queries].forEach(query => {\n    if (!queryCheckComponent(world, query, component)) return\n    const match = queryCheckEntity(world, query, eid)\n    if (match) queryAddEntity(world, query, eid)\n  })\n  \n  // Zero out each property value\n  if (reset) resetStoreFor(component, eid)\n}\n\nexport const removeComponent = (world, component, eid, reset=false) => {\n  const { generationId, bitflag } = world[$componentMap].get(component)\n\n  if (!(world[$entityMasks][generationId][eid] & bitflag)) return\n\n  // todo: archetype graph\n  world[$queries].forEach(query => {\n    if (!queryCheckComponent(world, query, component)) return\n    const match = queryCheckEntity(world, query, eid)\n    if (match) queryRemoveEntity(world, query, eid)\n  })\n\n  // Remove flag from entity bitmask\n  world[$entityMasks][generationId][eid] &= ~bitflag\n  \n  // Zero out each property value\n  if (reset) resetStoreFor(component, eid)\n}\n","import { $componentMap } from './Component.js'\nimport { $queryMap, $queries, $dirtyQueries } from './Query.js'\nimport { $entityArray, $entityIndices, $entityEnabled, $entityMasks } from './Entity.js'\n\nexport const $size = Symbol('size')\nexport const $warningSize = Symbol('warningSize')\nexport const $bitflag = Symbol('bitflag')\n\nexport const createWorld = (size = 1000000) => {\n  const world = {}\n  \n  world[$size] = size\n\n  world[$entityEnabled] = new Uint8Array(size)\n  world[$entityMasks] = [new Uint32Array(size)]\n\n  world[$entityArray] = []\n  world[$entityIndices] = new Uint32Array(size)\n\n  world[$bitflag] = 1\n\n  world[$componentMap] = new Map()\n\n  world[$queryMap] = new Map()\n  world[$queries] = new Set()\n  world[$dirtyQueries] = new Set()\n\n  world[$warningSize] = size - (size / 5)\n\n  return world\n}","import { commitRemovals } from './Query.js'\n\nexport const defineSystem = (update) => {\n  const system = world => {\n    update(world)\n    commitRemovals(world)\n    return world\n  }\n\n  Object.defineProperty(system, 'name', {\n    value: (update.name || \"AnonymousSystem\") + \"_internal\",\n    configurable: true,\n  })\n\n  return system\n}","import { createWorld } from './World.js'\nimport { addEntity, removeEntity } from './Entity.js'\nimport { defineComponent, registerComponent, registerComponents, hasComponent, addComponent, removeComponent } from './Component.js'\nimport { defineSystem } from './System.js'\nimport { defineQuery, enterQuery, exitQuery, Changed, Not, commitRemovals } from './Query.js'\nimport { defineSerializer, defineDeserializer } from './Serialize.js'\nimport { TYPES_ENUM } from './Storage.js'\n\nexport const pipe = (...fns) => input => {\n  fns = Array.isArray(fns[0]) ? fns[0] : fns\n  let tmp = input\n  for (let i = 0; i < fns.length; i++) {\n    const fn = fns[i]\n    tmp = fn(tmp)\n  }\n  return tmp\n}\n\nexport const Types = TYPES_ENUM\n\nexport {\n\n  createWorld,\n  addEntity,\n  removeEntity,\n\n  registerComponent,\n  registerComponents,\n  defineComponent,\n  addComponent,\n  removeComponent,\n  hasComponent,\n  \n  defineQuery,\n  Changed,\n  Not,\n  enterQuery,\n  exitQuery,\n  commitRemovals,\n\n  defineSystem,\n  \n  defineSerializer,\n  defineDeserializer,\n\n}\n"],"names":["TYPES_ENUM","i8","ui8","ui8c","i16","ui16","i32","ui32","f32","f64","TYPES_NAMES","TYPES","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","UNSIGNED_MAX","uint8","uint16","uint32","roundToMultiple4","x","Math","ceil","$storeRef","Symbol","$storeSize","$storeMaps","$storeFlattened","$storeBase","$storeArrayCounts","$storeSubarrays","$storeCursor","$subarrayCursors","$subarray","$queryShadow","$serializeShadow","$indexType","$indexBytes","stores","resize","ta","size","newBuffer","ArrayBuffer","BYTES_PER_ELEMENT","newTa","constructor","set","resizeRecursive","store","Object","keys","forEach","key","isView","resizeSubarrays","cursors","type","arrayCount","length","summedBytesPerElement","Array","fill","reduce","a","p","summedLength","buffer","array","slice","eid","from","to","subarray","resizeStore","resetStoreFor","createTypeStore","totalBytes","createArrayStore","metadata","indexType","Error","end","createShadows","isArrayType","isArray","createStore","schema","$store","JSON","parse","stringify","arrayCounts","collectArrayCounts","s","k","recursiveTransform","push","assign","$entityMasks","$entityEnabled","$entityArray","$entityIndices","NONE","globalEntityCursor","removed","getEntityCursor","resizeWorld","world","$size","$componentMap","c","$queryMap","q","indices","enabled","i","masks","addEntity","$warningSize","amount","pop","removeEntity","$queries","query","queryRemoveEntity","index","swapped","diff","get","changed","flat","flatProps","entities","dirty","pid","prop","canonicalize","target","componentProps","changedProps","Set","map","name","add","getOwnPropertySymbols","includes","v","concat","defineSerializer","maxBytes","isWorld","view","DataView","ents","component","where","has","setUint8","countWhere","count","setUint32","replace","indexBytes","countWhere2","count2","value","defineDeserializer","packet","byteLength","getUint8","entityCount","getUint32","hasComponent","addComponent","Not","QueryNot","Changed","QueryChanged","$dirtyQueries","$queryComponents","enterQuery","fn","registerQuery","enter","exitQuery","exit","components","notComponents","changedComponents","mapComponents","generations","registerComponent","generationId","reduceBitmasks","bitflag","notMasks","toRemove","entered","exited","queryCheckEntity","queryAddEntity","queryHooks","shift","defineQuery","queryCommitRemovals","qMask","qNotMask","eMask","queryCheckComponent","mask","delete","commitRemovals","defineComponent","incrementBitflag","$bitflag","registerComponents","registeredComponent","reset","match","removeComponent","createWorld","Map","defineSystem","update","system","defineProperty","configurable","pipe","fns","input","tmp","Types"],"mappings":"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"}